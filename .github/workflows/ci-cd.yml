name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    # Manual trigger

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write # Needed to push the gh-pages branch

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: frontend
        run: |
          npm ci
          
      - name: Build frontend
        working-directory: frontend
        run: |
          npm run build
        env:
          CI: false
          NODE_ENV: production
          GENERATE_SOURCEMAP: false
          
      - name: Setup custom domain
        run: echo "dripzy.app" > frontend/build/CNAME

      - name: List build directory contents # Debug step
        run: ls -la frontend/build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          folder: frontend/build
          branch: gh-pages
          clean: true

      - name: Deploy backend to Render
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
            echo "Skipping Render deployment - missing credentials"
            exit 0
          fi
          
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json")
          
          HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')
          
          if [ "$HTTP_STATUS" -ne 200 ] && [ "$HTTP_STATUS" -ne 201 ]; then
            echo "Error deploying to Render. Status: $HTTP_STATUS"
            echo "Response: $BODY"
            exit 1
          fi
          
          echo "Successfully triggered Render deployment. Status: $HTTP_STATUS" 